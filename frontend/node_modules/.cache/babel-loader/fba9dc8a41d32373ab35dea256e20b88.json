{"ast":null,"code":"var _jsxFileName = \"/Users/kyoro/Desktop/practice_golang/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [records, setRecords] = useState([]);\n  const fetchPost = () => {\n    const fetchRecordUrl = 'https://jsonplaceholder.typicode.com/posts/' + (records.length + 1);\n    fetch(fetchRecordUrl, {\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return Promise.resolve(response.json());\n      }\n      return Promise.reject();\n    }).then(json => {\n      const newRecod = {\n        id: records.length,\n        title: json.title,\n        body: json.body\n      };\n      setRecords([newRecod, ...records]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Koki Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchPost(),\n        children: \"Get Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"recordList\",\n        children: records.map(record => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"record\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: record.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: record.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, record.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7sF58uJEPcsV12XlMsQ19kPCAQo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","records","setRecords","fetchPost","fetchRecordUrl","length","fetch","method","then","response","status","Promise","resolve","json","reject","newRecod","id","title","body","map","record"],"sources":["/Users/kyoro/Desktop/practice_golang/src/App.tsx"],"sourcesContent":["import React,{ useState} from 'react';\nimport './App.css';\n\ntype Record = {\n  title: string;\n  id: number;\n  body: string;\n};\n\nfunction App() {\n  const [records, setRecords] = useState<Record[]>([]);\n\n  const fetchPost = () => {\n    const fetchRecordUrl = 'https://jsonplaceholder.typicode.com/posts/' + (records.length + 1);\n    fetch(fetchRecordUrl, {\n      method: 'GET',\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          return Promise.resolve(response.json());\n        }\n        return Promise.reject();\n      })\n      .then((json) => {\n        const newRecod: Record = {\n          id: records.length,\n          title: json!.title,\n          body: json!.body\n        };\n    \n        setRecords([newRecod, ...records]);\n      });\n  };\n\n\n\n  return (\n    <div className=\"App\">\n     <div>\n       <h2>Koki Blog</h2>\n          <button onClick={() => fetchPost()}>Get Post</button>\n       <ul className='recordList'>\n         {records.map((record) => (\n            <div className='record' key={record.id}>\n              <h3>{record.title}</h3>\n              <hr></hr>\n              <p>{record.body}</p>\n            </div>\n         ))}\n       </ul>\n     </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,WAAW;AAAC;AAQnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAW,EAAE,CAAC;EAEpD,MAAMI,SAAS,GAAG,MAAM;IACtB,MAAMC,cAAc,GAAG,6CAA6C,IAAIH,OAAO,CAACI,MAAM,GAAG,CAAC,CAAC;IAC3FC,KAAK,CAACF,cAAc,EAAE;MACpBG,MAAM,EAAE;IACV,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOC,OAAO,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,EAAE,CAAC;MACzC;MACA,OAAOF,OAAO,CAACG,MAAM,EAAE;IACzB,CAAC,CAAC,CACDN,IAAI,CAAEK,IAAI,IAAK;MACd,MAAME,QAAgB,GAAG;QACvBC,EAAE,EAAEf,OAAO,CAACI,MAAM;QAClBY,KAAK,EAAEJ,IAAI,CAAEI,KAAK;QAClBC,IAAI,EAAEL,IAAI,CAAEK;MACd,CAAC;MAEDhB,UAAU,CAAC,CAACa,QAAQ,EAAE,GAAGd,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC;EACN,CAAC;EAID,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBACnB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACf;QAAQ,OAAO,EAAE,MAAME,SAAS,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB,eACxD;QAAI,SAAS,EAAC,YAAY;QAAA,UACvBF,OAAO,CAACkB,GAAG,CAAEC,MAAM,iBACjB;UAAK,SAAS,EAAC,QAAQ;UAAA,wBACrB;YAAA,UAAKA,MAAM,CAACH;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACvB;YAAA;YAAA;YAAA;UAAA,QAAS,eACT;YAAA,UAAIG,MAAM,CAACF;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA,GAHOE,MAAM,CAACJ,EAAE;UAAA;UAAA;UAAA;QAAA,QAKxC;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GA5CQhB,GAAG;AAAA,KAAHA,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}